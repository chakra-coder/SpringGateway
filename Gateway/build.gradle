plugins {
    id 'net.saliman.cobertura' version '2.2.7'
    //id "com.bmuschko.tomcat" version "2.2.2"
   // id 'codenarc'
   // id 'findbugs'
   // id 'checkstyle'
}
apply plugin: 'war'
apply plugin: 'jetty'
//apply plugin: 'cobertura'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

dependencies {
    //compile project(":zuul-core")
    compile 'commons-io:commons-io:2.4'
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.mockito:mockito-all:1.9.5'
    compile 'org.slf4j:slf4j-api:1.7.6'

    provided 'junit:junit-dep:4.10'
    provided 'javax.servlet:servlet-api:2.5'

    compile 'com.netflix.archaius:archaius-core:0.6.0'
    compile 'com.netflix.servo:servo-core:0.7.2'
    compile 'com.netflix.netflix-commons:netflix-commons-util:0.1.1'

    compile('org.springframework.cloud:spring-cloud-starter-zuul:1.3.0.BUILD-SNAPSHOT')
    compile 'org.apache.httpcomponents:httpclient:4.5'
    providedCompile 'javax.servlet:servlet-api:2.5'

//    def tomcatVersion = '8.0.23'
//    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
//            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
//            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

}
repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}



//eclipse {
//  classpath {
//        downloadSources = true
//        downloadJavadoc = true
//  }
//}


war {
    webXml = file('src/main/webapp/WEB-INF/web.xml')
    webInf{
        from('src/main/groovy/filters') {
            into('classes')
        }
    }
}

jettyRun.contextPath = '/'

jettyRun.doFirst {
    System.setProperty("zuul.filter.root", "src/main/groovy/filters")
}

//cobertura {
//    coverageSourceDirs = [sourceSets.main.groovy.srcDirs, sourceSets.main.java.srcDirs]
//    coverageFormats = ['xml', 'html']
//}

//checkstyle {
//    toolVersion = '6.7'
//    ignoreFailures = true
//    showViolations = false
//    sourceSets = [sourceSets.main]
//    reportsDir = rootProject.file('zuul-simple-webapp/build/reports/checkstyle')
//}

//codenarc {
//    configFile = rootProject.file('zuul-simple-webapp/config/codenarc/rules.groovy')
//    ignoreFailures = true
//    sourceSets = [sourceSets.main]
//    reportFormat = 'xml'
//}
//
//findbugs {
//    effort = 'min'
//    ignoreFailures = true
//    sourceSets = [sourceSets.main]
//}

//tomcat {
//    contextPath = '/'
//}
//
//[tomcatRun, tomcatRunWar]*.doFirst {
//    System.setProperty("zuul.filter.root", "src/main/groovy/filters")
//}
